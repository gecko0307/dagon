/*
Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

module bindbc.soloud.binddynamic;

import bindbc.loader;
import bindbc.soloud.types;

extern(C) @nogc nothrow
{
    alias int* function() da_Soloud_create;
    alias int* function(int* aObjHandle) da_Soloud_destroy;
    alias int function(int* aObjHandle, uint aFlags, uint aBackend, uint aSamplerate, uint aBufferSize, uint aChannels) da_Soloud_initEx;
    //alias int function(int* aObjHandle) da_Soloud_pause;
    //alias int function(int* aObjHandle) da_Soloud_resume;
    alias void function(int* aObjHandle) da_Soloud_deinit;
    alias uint function(int* aObjHandle) da_Soloud_getVersion;
    alias const(char)* function(int* aObjHandle, int aErrorCode) da_Soloud_getErrorString;
    alias uint function(int* aObjHandle) da_Soloud_getBackendId;
    alias const(char)* function(int* aObjHandle) da_Soloud_getBackendString;
    alias uint function(int* aObjHandle) da_Soloud_getBackendChannels;
    alias uint function(int* aObjHandle) da_Soloud_getBackendSamplerate;
    alias uint function(int* aObjHandle) da_Soloud_getBackendBufferSize;
    alias int function(int* aObjHandle, uint aChannel, float aX, float aY, float aZ) da_Soloud_setSpeakerPosition;
    alias int function(int* aObjHandle, uint aChannel, float[] aX, float[] aY, float[] aZ) da_Soloud_getSpeakerPosition;
    alias uint function(int* aObjHandle, int* aSound, float aVolume, float aPan, int aPaused, uint aBus) da_Soloud_playEx;
    alias uint function(int* aObjHandle, double aSoundTime, int* aSound, float aVolume, float aPan, uint aBus) da_Soloud_playClockedEx;
    alias uint function(int* aObjHandle, int* aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused, uint aBus) da_Soloud_play3dEx;
    alias uint function(int* aObjHandle, double aSoundTime, int* aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, uint aBus) da_Soloud_play3dClockedEx;
    alias uint function(int* aObjHandle, int* aSound, float aVolume, int aPaused, uint aBus) da_Soloud_playBackgroundEx;
    alias int function(int* aObjHandle, uint aVoiceHandle, double aSeconds) da_Soloud_seek;
    alias void function(int* aObjHandle, uint aVoiceHandle) da_Soloud_stop;
    alias void function(int* aObjHandle) da_Soloud_stopAll;
    alias void function(int* aObjHandle, int* aSound) da_Soloud_stopAudioSource;
    alias int function(int* aObjHandle, int* aSound) da_Soloud_countAudioSource;
    alias void function(int* aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aValue) da_Soloud_setFilterParameter;
    alias float function(int* aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId) da_Soloud_getFilterParameter;
    alias void function(int* aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aTo, double aTime) da_Soloud_fadeFilterParameter;
    alias void function(int* aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aFrom, float aTo, double aTime) da_Soloud_oscillateFilterParameter;
    alias double function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getStreamTime;
    alias double function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getStreamPosition;
    alias int function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getPause;
    alias float function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getVolume;
    alias float function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getOverallVolume;
    alias float function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getPan;
    alias float function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getSamplerate;
    alias int function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getProtectVoice;
    alias uint function(int* aObjHandle) da_Soloud_getActiveVoiceCount;
    alias uint function(int* aObjHandle) da_Soloud_getVoiceCount;
    alias int function(int* aObjHandle, uint aVoiceHandle) da_Soloud_isValidVoiceHandle;
    alias float function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getRelativePlaySpeed;
    alias float function(int* aObjHandle) da_Soloud_getPostClipScaler;
    alias uint function(int* aObjHandle) da_Soloud_getMainResampler;
    alias float function(int* aObjHandle) da_Soloud_getGlobalVolume;
    alias uint function(int* aObjHandle) da_Soloud_getMaxActiveVoiceCount;
    alias int function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getLooping;
    alias int function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getAutoStop;
    alias double function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getLoopPoint;
    alias void function(int* aObjHandle, uint aVoiceHandle, double aLoopPoint) da_Soloud_setLoopPoint;
    alias void function(int* aObjHandle, uint aVoiceHandle, int aLooping) da_Soloud_setLooping;
    alias void function(int* aObjHandle, uint aVoiceHandle, int aAutoStop) da_Soloud_setAutoStop;
    alias int function(int* aObjHandle, uint aVoiceCount) da_Soloud_setMaxActiveVoiceCount;
    alias void function(int* aObjHandle, uint aVoiceHandle, int aMustTick, int aKill) da_Soloud_setInaudibleBehavior;
    alias void function(int* aObjHandle, float aVolume) da_Soloud_setGlobalVolume;
    alias void function(int* aObjHandle, float aScaler) da_Soloud_setPostClipScaler;
    alias void function(int* aObjHandle, uint aResampler) da_Soloud_setMainResampler;
    alias void function(int* aObjHandle, uint aVoiceHandle, int aPause) da_Soloud_setPause;
    alias void function(int* aObjHandle, int aPause) da_Soloud_setPauseAll;
    alias int function(int* aObjHandle, uint aVoiceHandle, float aSpeed) da_Soloud_setRelativePlaySpeed;
    alias void function(int* aObjHandle, uint aVoiceHandle, int aProtect) da_Soloud_setProtectVoice;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aSamplerate) da_Soloud_setSamplerate;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aPan) da_Soloud_setPan;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aLVolume, float aRVolume) da_Soloud_setPanAbsolute;
    alias void function(int* aObjHandle, uint aVoiceHandle, uint aChannel, float aVolume) da_Soloud_setChannelVolume;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aVolume) da_Soloud_setVolume;
    alias void function(int* aObjHandle, uint aVoiceHandle, uint aSamples) da_Soloud_setDelaySamples;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aTo, double aTime) da_Soloud_fadeVolume;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aTo, double aTime) da_Soloud_fadePan;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aTo, double aTime) da_Soloud_fadeRelativePlaySpeed;
    alias void function(int* aObjHandle, float aTo, double aTime) da_Soloud_fadeGlobalVolume;
    alias void function(int* aObjHandle, uint aVoiceHandle, double aTime) da_Soloud_schedulePause;
    alias void function(int* aObjHandle, uint aVoiceHandle, double aTime) da_Soloud_scheduleStop;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime) da_Soloud_oscillateVolume;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime) da_Soloud_oscillatePan;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime) da_Soloud_oscillateRelativePlaySpeed;
    alias void function(int* aObjHandle, float aFrom, float aTo, double aTime) da_Soloud_oscillateGlobalVolume;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Soloud_setGlobalFilter;
    alias void function(int* aObjHandle, int aEnable) da_Soloud_setVisualizationEnable;
    alias float[] function(int* aObjHandle) da_Soloud_calcFFT;
    alias float[] function(int* aObjHandle) da_Soloud_getWave;
    alias float function(int* aObjHandle, uint aChannel) da_Soloud_getApproximateVolume;
    alias uint function(int* aObjHandle, uint aVoiceHandle) da_Soloud_getLoopCount;
    alias float function(int* aObjHandle, uint aVoiceHandle, uint aInfoKey) da_Soloud_getInfo;
    alias uint function(int* aObjHandle) da_Soloud_createVoiceGroup;
    alias int function(int* aObjHandle, uint aVoiceGroupHandle) da_Soloud_destroyVoiceGroup;
    alias int function(int* aObjHandle, uint aVoiceGroupHandle, uint aVoiceHandle) da_Soloud_addVoiceToGroup;
    alias int function(int* aObjHandle, uint aVoiceGroupHandle) da_Soloud_isVoiceGroup;
    alias int function(int* aObjHandle, uint aVoiceGroupHandle) da_Soloud_isVoiceGroupEmpty;
    alias void function(int* aObjHandle) da_Soloud_update3dAudio;
    alias int function(int* aObjHandle, float aSpeed) da_Soloud_set3dSoundSpeed;
    alias float function(int* aObjHandle) da_Soloud_get3dSoundSpeed;
    alias void function(int* aObjHandle, float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX, float aVelocityY, float aVelocityZ) da_Soloud_set3dListenerParametersEx;
    alias void function(int* aObjHandle, float aPosX, float aPosY, float aPosZ) da_Soloud_set3dListenerPosition;
    alias void function(int* aObjHandle, float aAtX, float aAtY, float aAtZ) da_Soloud_set3dListenerAt;
    alias void function(int* aObjHandle, float aUpX, float aUpY, float aUpZ) da_Soloud_set3dListenerUp;
    alias void function(int* aObjHandle, float aVelocityX, float aVelocityY, float aVelocityZ) da_Soloud_set3dListenerVelocity;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX, float aVelocityY, float aVelocityZ) da_Soloud_set3dSourceParametersEx;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aPosX, float aPosY, float aPosZ) da_Soloud_set3dSourcePosition;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ) da_Soloud_set3dSourceVelocity;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aMinDistance, float aMaxDistance) da_Soloud_set3dSourceMinMaxDistance;
    alias void function(int* aObjHandle, uint aVoiceHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Soloud_set3dSourceAttenuation;
    alias void function(int* aObjHandle, uint aVoiceHandle, float aDopplerFactor) da_Soloud_set3dSourceDopplerFactor;
    alias void function(int* aObjHandle, float[] aBuffer, uint aSamples) da_Soloud_mix;
    alias void function(int* aObjHandle, short[] aBuffer, uint aSamples) da_Soloud_mixSigned16;
    alias int* function() da_Ay_create;
    alias int* function(int* aObjHandle) da_Ay_destroy;
    alias void function(int* aObjHandle, float aVolume) da_Ay_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Ay_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Ay_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Ay_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Ay_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Ay_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Ay_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Ay_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Ay_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Ay_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Ay_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Ay_setLoopPoint;
    alias double function(int* aObjHandle) da_Ay_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Ay_setFilter;
    alias void function(int* aObjHandle) da_Ay_stop;
    alias int* function() da_BassboostFilter_create;
    alias int* function(int* aObjHandle) da_BassboostFilter_destroy;
    alias int function(int* aObjHandle) da_BassboostFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_BassboostFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_BassboostFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_BassboostFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_BassboostFilter_getParamMin;
    alias int function(int* aObjHandle, float aBoost) da_BassboostFilter_setParams;
    alias int* function() da_BiquadResonantFilter_create;
    alias int* function(int* aObjHandle) da_BiquadResonantFilter_destroy;
    alias int function(int* aObjHandle) da_BiquadResonantFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_BiquadResonantFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_BiquadResonantFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_BiquadResonantFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_BiquadResonantFilter_getParamMin;
    alias int function(int* aObjHandle, int aType, float aFrequency, float aResonance) da_BiquadResonantFilter_setParams;
    alias int* function() da_Bus_create;
    alias int* function(int* aObjHandle) da_Bus_destroy;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Bus_setFilter;
    alias uint function(int* aObjHandle, int* aSound, float aVolume, float aPan, int aPaused) da_Bus_playEx;
    alias uint function(int* aObjHandle, double aSoundTime, int* aSound, float aVolume, float aPan) da_Bus_playClockedEx;
    alias uint function(int* aObjHandle, int* aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused) da_Bus_play3dEx;
    alias uint function(int* aObjHandle, double aSoundTime, int* aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume) da_Bus_play3dClockedEx;
    alias int function(int* aObjHandle, uint aChannels) da_Bus_setChannels;
    alias void function(int* aObjHandle, int aEnable) da_Bus_setVisualizationEnable;
    alias void function(int* aObjHandle, uint aVoiceHandle) da_Bus_annexSound;
    alias float[] function(int* aObjHandle) da_Bus_calcFFT;
    alias float[] function(int* aObjHandle) da_Bus_getWave;
    alias float function(int* aObjHandle, uint aChannel) da_Bus_getApproximateVolume;
    alias uint function(int* aObjHandle) da_Bus_getActiveVoiceCount;
    alias uint function(int* aObjHandle) da_Bus_getResampler;
    alias void function(int* aObjHandle, uint aResampler) da_Bus_setResampler;
    alias void function(int* aObjHandle, float aVolume) da_Bus_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Bus_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Bus_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Bus_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Bus_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Bus_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Bus_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Bus_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Bus_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Bus_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Bus_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Bus_setLoopPoint;
    alias double function(int* aObjHandle) da_Bus_getLoopPoint;
    alias void function(int* aObjHandle) da_Bus_stop;
    alias int* function() da_DCRemovalFilter_create;
    alias int* function(int* aObjHandle) da_DCRemovalFilter_destroy;
    alias int function(int* aObjHandle, float aLength) da_DCRemovalFilter_setParamsEx;
    alias int function(int* aObjHandle) da_DCRemovalFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_DCRemovalFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_DCRemovalFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_DCRemovalFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_DCRemovalFilter_getParamMin;
    alias int* function() da_EchoFilter_create;
    alias int* function(int* aObjHandle) da_EchoFilter_destroy;
    alias int function(int* aObjHandle) da_EchoFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_EchoFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_EchoFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_EchoFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_EchoFilter_getParamMin;
    alias int function(int* aObjHandle, float aDelay, float aDecay, float aFilter) da_EchoFilter_setParamsEx;
    alias int* function() da_FFTFilter_create;
    alias int* function(int* aObjHandle) da_FFTFilter_destroy;
    alias int function(int* aObjHandle) da_FFTFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_FFTFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_FFTFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_FFTFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_FFTFilter_getParamMin;
    alias int* function() da_FlangerFilter_create;
    alias int* function(int* aObjHandle) da_FlangerFilter_destroy;
    alias int function(int* aObjHandle) da_FlangerFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_FlangerFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_FlangerFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_FlangerFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_FlangerFilter_getParamMin;
    alias int function(int* aObjHandle, float aDelay, float aFreq) da_FlangerFilter_setParams;
    alias int* function() da_FreeverbFilter_create;
    alias int* function(int* aObjHandle) da_FreeverbFilter_destroy;
    alias int function(int* aObjHandle) da_FreeverbFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_FreeverbFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_FreeverbFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_FreeverbFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_FreeverbFilter_getParamMin;
    alias int function(int* aObjHandle, float aMode, float aRoomSize, float aDamp, float aWidth) da_FreeverbFilter_setParams;
    alias int* function() da_LofiFilter_create;
    alias int* function(int* aObjHandle) da_LofiFilter_destroy;
    alias int function(int* aObjHandle) da_LofiFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_LofiFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_LofiFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_LofiFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_LofiFilter_getParamMin;
    alias int function(int* aObjHandle, float aSampleRate, float aBitdepth) da_LofiFilter_setParams;
    alias int* function() da_Monotone_create;
    alias int* function(int* aObjHandle) da_Monotone_destroy;
    alias int function(int* aObjHandle, int aHardwareChannels, int aWaveform) da_Monotone_setParamsEx;
    alias int function(int* aObjHandle, const(char)* aFilename) da_Monotone_load;
    alias int function(int* aObjHandle, const(ubyte)* aMem, uint aLength, int aCopy, int aTakeOwnership) da_Monotone_loadMemEx;
    alias int function(int* aObjHandle, int* aFile) da_Monotone_loadFile;
    alias void function(int* aObjHandle, float aVolume) da_Monotone_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Monotone_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Monotone_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Monotone_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Monotone_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Monotone_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Monotone_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Monotone_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Monotone_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Monotone_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Monotone_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Monotone_setLoopPoint;
    alias double function(int* aObjHandle) da_Monotone_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Monotone_setFilter;
    alias void function(int* aObjHandle) da_Monotone_stop;
    alias int* function() da_Noise_create;
    alias int* function(int* aObjHandle) da_Noise_destroy;
    alias void function(int* aObjHandle, float aOct0, float aOct1, float aOct2, float aOct3, float aOct4, float aOct5, float aOct6, float aOct7, float aOct8, float aOct9) da_Noise_setOctaveScale;
    alias void function(int* aObjHandle, int aType) da_Noise_setType;
    alias void function(int* aObjHandle, float aVolume) da_Noise_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Noise_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Noise_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Noise_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Noise_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Noise_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Noise_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Noise_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Noise_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Noise_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Noise_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Noise_setLoopPoint;
    alias double function(int* aObjHandle) da_Noise_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Noise_setFilter;
    alias void function(int* aObjHandle) da_Noise_stop;
    alias int* function() da_Openmpt_create;
    alias int* function(int* aObjHandle) da_Openmpt_destroy;
    alias int function(int* aObjHandle, const(char)* aFilename) da_Openmpt_load;
    alias int function(int* aObjHandle, const(ubyte)* aMem, uint aLength, int aCopy, int aTakeOwnership) da_Openmpt_loadMemEx;
    alias int function(int* aObjHandle, int* aFile) da_Openmpt_loadFile;
    alias void function(int* aObjHandle, float aVolume) da_Openmpt_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Openmpt_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Openmpt_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Openmpt_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Openmpt_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Openmpt_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Openmpt_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Openmpt_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Openmpt_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Openmpt_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Openmpt_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Openmpt_setLoopPoint;
    alias double function(int* aObjHandle) da_Openmpt_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Openmpt_setFilter;
    alias void function(int* aObjHandle) da_Openmpt_stop;
    alias int* function() da_Queue_create;
    alias int* function(int* aObjHandle) da_Queue_destroy;
    alias int function(int* aObjHandle, int* aSound) da_Queue_play;
    alias uint function(int* aObjHandle) da_Queue_getQueueCount;
    alias int function(int* aObjHandle, int* aSound) da_Queue_isCurrentlyPlaying;
    alias int function(int* aObjHandle, int* aSound) da_Queue_setParamsFromAudioSource;
    alias int function(int* aObjHandle, float aSamplerate, uint aChannels) da_Queue_setParamsEx;
    alias void function(int* aObjHandle, float aVolume) da_Queue_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Queue_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Queue_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Queue_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Queue_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Queue_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Queue_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Queue_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Queue_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Queue_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Queue_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Queue_setLoopPoint;
    alias double function(int* aObjHandle) da_Queue_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Queue_setFilter;
    alias void function(int* aObjHandle) da_Queue_stop;
    alias int* function() da_RobotizeFilter_create;
    alias int* function(int* aObjHandle) da_RobotizeFilter_destroy;
    alias int function(int* aObjHandle) da_RobotizeFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_RobotizeFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_RobotizeFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_RobotizeFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_RobotizeFilter_getParamMin;
    alias void function(int* aObjHandle, float aFreq, int aWaveform) da_RobotizeFilter_setParams;
    alias int* function() da_Sfxr_create;
    alias int* function(int* aObjHandle) da_Sfxr_destroy;
    alias void function(int* aObjHandle) da_Sfxr_resetParams;
    alias int function(int* aObjHandle, const(char)* aFilename) da_Sfxr_loadParams;
    alias int function(int* aObjHandle, ubyte* aMem, uint aLength, int aCopy, int aTakeOwnership) da_Sfxr_loadParamsMemEx;
    alias int function(int* aObjHandle, int* aFile) da_Sfxr_loadParamsFile;
    alias int function(int* aObjHandle, int aPresetNo, int aRandSeed) da_Sfxr_loadPreset;
    alias void function(int* aObjHandle, float aVolume) da_Sfxr_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Sfxr_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Sfxr_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Sfxr_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Sfxr_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Sfxr_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Sfxr_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Sfxr_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Sfxr_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Sfxr_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Sfxr_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Sfxr_setLoopPoint;
    alias double function(int* aObjHandle) da_Sfxr_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Sfxr_setFilter;
    alias void function(int* aObjHandle) da_Sfxr_stop;
    alias int* function() da_Speech_create;
    alias int* function(int* aObjHandle) da_Speech_destroy;
    alias int function(int* aObjHandle, const(char)* aText) da_Speech_setText;
    alias int function(int* aObjHandle, uint aBaseFrequency, float aBaseSpeed, float aBaseDeclination, int aBaseWaveform) da_Speech_setParamsEx;
    alias void function(int* aObjHandle, float aVolume) da_Speech_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Speech_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Speech_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Speech_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Speech_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Speech_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Speech_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Speech_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Speech_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Speech_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Speech_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Speech_setLoopPoint;
    alias double function(int* aObjHandle) da_Speech_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Speech_setFilter;
    alias void function(int* aObjHandle) da_Speech_stop;
    alias int* function() da_TedSid_create;
    alias int* function(int* aObjHandle) da_TedSid_destroy;
    alias int function(int* aObjHandle, const(char)* aFilename) da_TedSid_load;
    alias int function(int* aObjHandle, const(ubyte)* aMem, uint aLength, int aCopy, int aTakeOwnership) da_TedSid_loadMemEx;
    alias int function(int* aObjHandle, int* aFile) da_TedSid_loadFile;
    alias void function(int* aObjHandle, float aVolume) da_TedSid_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_TedSid_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_TedSid_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_TedSid_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_TedSid_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_TedSid_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_TedSid_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_TedSid_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_TedSid_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_TedSid_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_TedSid_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_TedSid_setLoopPoint;
    alias double function(int* aObjHandle) da_TedSid_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_TedSid_setFilter;
    alias void function(int* aObjHandle) da_TedSid_stop;
    alias int* function() da_Vic_create;
    alias int* function(int* aObjHandle) da_Vic_destroy;
    alias void function(int* aObjHandle, int model) da_Vic_setModel;
    alias int function(int* aObjHandle) da_Vic_getModel;
    alias void function(int* aObjHandle, int reg, ubyte value) da_Vic_setRegister;
    alias ubyte function(int* aObjHandle, int reg) da_Vic_getRegister;
    alias void function(int* aObjHandle, float aVolume) da_Vic_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Vic_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Vic_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Vic_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Vic_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Vic_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Vic_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Vic_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Vic_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Vic_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Vic_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Vic_setLoopPoint;
    alias double function(int* aObjHandle) da_Vic_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Vic_setFilter;
    alias void function(int* aObjHandle) da_Vic_stop;
    alias int* function() da_Vizsn_create;
    alias int* function(int* aObjHandle) da_Vizsn_destroy;
    alias void function(int* aObjHandle, char* aText) da_Vizsn_setText;
    alias void function(int* aObjHandle, float aVolume) da_Vizsn_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Vizsn_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Vizsn_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Vizsn_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Vizsn_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Vizsn_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Vizsn_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Vizsn_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Vizsn_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Vizsn_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Vizsn_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Vizsn_setLoopPoint;
    alias double function(int* aObjHandle) da_Vizsn_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Vizsn_setFilter;
    alias void function(int* aObjHandle) da_Vizsn_stop;
    alias int* function() da_Wav_create;
    alias int* function(int* aObjHandle) da_Wav_destroy;
    alias int function(int* aObjHandle, const(char)* aFilename) da_Wav_load;
    alias int function(int* aObjHandle, const(ubyte)* aMem, uint aLength, int aCopy, int aTakeOwnership) da_Wav_loadMemEx;
    alias int function(int* aObjHandle, int* aFile) da_Wav_loadFile;
    alias int function(int* aObjHandle, ubyte* aMem, uint aLength, float aSamplerate, uint aChannels) da_Wav_loadRawWave8Ex;
    alias int function(int* aObjHandle, short[] aMem, uint aLength, float aSamplerate, uint aChannels) da_Wav_loadRawWave16Ex;
    alias int function(int* aObjHandle, float[] aMem, uint aLength, float aSamplerate, uint aChannels, int aCopy, int aTakeOwnership) da_Wav_loadRawWaveEx;
    alias double function(int* aObjHandle) da_Wav_getLength;
    alias void function(int* aObjHandle, float aVolume) da_Wav_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_Wav_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_Wav_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_Wav_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_Wav_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_Wav_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_Wav_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_Wav_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_Wav_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_Wav_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_Wav_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_Wav_setLoopPoint;
    alias double function(int* aObjHandle) da_Wav_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_Wav_setFilter;
    alias void function(int* aObjHandle) da_Wav_stop;
    alias int* function() da_WaveShaperFilter_create;
    alias int* function(int* aObjHandle) da_WaveShaperFilter_destroy;
    alias int function(int* aObjHandle, float aAmount) da_WaveShaperFilter_setParams;
    alias int function(int* aObjHandle) da_WaveShaperFilter_getParamCount;
    alias const(char)* function(int* aObjHandle, uint aParamIndex) da_WaveShaperFilter_getParamName;
    alias uint function(int* aObjHandle, uint aParamIndex) da_WaveShaperFilter_getParamType;
    alias float function(int* aObjHandle, uint aParamIndex) da_WaveShaperFilter_getParamMax;
    alias float function(int* aObjHandle, uint aParamIndex) da_WaveShaperFilter_getParamMin;
    alias int* function() da_WavStream_create;
    alias int* function(int* aObjHandle) da_WavStream_destroy;
    alias int function(int* aObjHandle, const(char)* aFilename) da_WavStream_load;
    alias int function(int* aObjHandle, const(ubyte)* aData, uint aDataLen, int aCopy, int aTakeOwnership) da_WavStream_loadMemEx;
    alias int function(int* aObjHandle, const(char)* aFilename) da_WavStream_loadToMem;
    alias int function(int* aObjHandle, int* aFile) da_WavStream_loadFile;
    alias int function(int* aObjHandle, int* aFile) da_WavStream_loadFileToMem;
    alias double function(int* aObjHandle) da_WavStream_getLength;
    alias void function(int* aObjHandle, float aVolume) da_WavStream_setVolume;
    alias void function(int* aObjHandle, int aLoop) da_WavStream_setLooping;
    alias void function(int* aObjHandle, int aAutoStop) da_WavStream_setAutoStop;
    alias void function(int* aObjHandle, float aMinDistance, float aMaxDistance) da_WavStream_set3dMinMaxDistance;
    alias void function(int* aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor) da_WavStream_set3dAttenuation;
    alias void function(int* aObjHandle, float aDopplerFactor) da_WavStream_set3dDopplerFactor;
    alias void function(int* aObjHandle, int aListenerRelative) da_WavStream_set3dListenerRelative;
    alias void function(int* aObjHandle, int aDistanceDelay) da_WavStream_set3dDistanceDelay;
    alias void function(int* aObjHandle, int* aCollider, int aUserData) da_WavStream_set3dColliderEx;
    alias void function(int* aObjHandle, int* aAttenuator) da_WavStream_set3dAttenuator;
    alias void function(int* aObjHandle, int aMustTick, int aKill) da_WavStream_setInaudibleBehavior;
    alias void function(int* aObjHandle, double aLoopPoint) da_WavStream_setLoopPoint;
    alias double function(int* aObjHandle) da_WavStream_getLoopPoint;
    alias void function(int* aObjHandle, uint aFilterId, int* aFilter) da_WavStream_setFilter;
    alias void function(int* aObjHandle) da_WavStream_stop;
}

__gshared
{
    da_Soloud_create Soloud_create;
    da_Soloud_destroy Soloud_destroy;
    da_Soloud_initEx Soloud_initEx;
    //da_Soloud_pause Soloud_pause;
    //da_Soloud_resume Soloud_resume;
    da_Soloud_deinit Soloud_deinit;
    da_Soloud_getVersion Soloud_getVersion;
    da_Soloud_getErrorString Soloud_getErrorString;
    da_Soloud_getBackendId Soloud_getBackendId;
    da_Soloud_getBackendString Soloud_getBackendString;
    da_Soloud_getBackendChannels Soloud_getBackendChannels;
    da_Soloud_getBackendSamplerate Soloud_getBackendSamplerate;
    da_Soloud_getBackendBufferSize Soloud_getBackendBufferSize;
    da_Soloud_setSpeakerPosition Soloud_setSpeakerPosition;
    da_Soloud_getSpeakerPosition Soloud_getSpeakerPosition;
    da_Soloud_playEx Soloud_playEx;
    da_Soloud_playClockedEx Soloud_playClockedEx;
    da_Soloud_play3dEx Soloud_play3dEx;
    da_Soloud_play3dClockedEx Soloud_play3dClockedEx;
    da_Soloud_playBackgroundEx Soloud_playBackgroundEx;
    da_Soloud_seek Soloud_seek;
    da_Soloud_stop Soloud_stop;
    da_Soloud_stopAll Soloud_stopAll;
    da_Soloud_stopAudioSource Soloud_stopAudioSource;
    da_Soloud_countAudioSource Soloud_countAudioSource;
    da_Soloud_setFilterParameter Soloud_setFilterParameter;
    da_Soloud_getFilterParameter Soloud_getFilterParameter;
    da_Soloud_fadeFilterParameter Soloud_fadeFilterParameter;
    da_Soloud_oscillateFilterParameter Soloud_oscillateFilterParameter;
    da_Soloud_getStreamTime Soloud_getStreamTime;
    da_Soloud_getStreamPosition Soloud_getStreamPosition;
    da_Soloud_getPause Soloud_getPause;
    da_Soloud_getVolume Soloud_getVolume;
    da_Soloud_getOverallVolume Soloud_getOverallVolume;
    da_Soloud_getPan Soloud_getPan;
    da_Soloud_getSamplerate Soloud_getSamplerate;
    da_Soloud_getProtectVoice Soloud_getProtectVoice;
    da_Soloud_getActiveVoiceCount Soloud_getActiveVoiceCount;
    da_Soloud_getVoiceCount Soloud_getVoiceCount;
    da_Soloud_isValidVoiceHandle Soloud_isValidVoiceHandle;
    da_Soloud_getRelativePlaySpeed Soloud_getRelativePlaySpeed;
    da_Soloud_getPostClipScaler Soloud_getPostClipScaler;
    da_Soloud_getMainResampler Soloud_getMainResampler;
    da_Soloud_getGlobalVolume Soloud_getGlobalVolume;
    da_Soloud_getMaxActiveVoiceCount Soloud_getMaxActiveVoiceCount;
    da_Soloud_getLooping Soloud_getLooping;
    da_Soloud_getAutoStop Soloud_getAutoStop;
    da_Soloud_getLoopPoint Soloud_getLoopPoint;
    da_Soloud_setLoopPoint Soloud_setLoopPoint;
    da_Soloud_setLooping Soloud_setLooping;
    da_Soloud_setAutoStop Soloud_setAutoStop;
    da_Soloud_setMaxActiveVoiceCount Soloud_setMaxActiveVoiceCount;
    da_Soloud_setInaudibleBehavior Soloud_setInaudibleBehavior;
    da_Soloud_setGlobalVolume Soloud_setGlobalVolume;
    da_Soloud_setPostClipScaler Soloud_setPostClipScaler;
    da_Soloud_setMainResampler Soloud_setMainResampler;
    da_Soloud_setPause Soloud_setPause;
    da_Soloud_setPauseAll Soloud_setPauseAll;
    da_Soloud_setRelativePlaySpeed Soloud_setRelativePlaySpeed;
    da_Soloud_setProtectVoice Soloud_setProtectVoice;
    da_Soloud_setSamplerate Soloud_setSamplerate;
    da_Soloud_setPan Soloud_setPan;
    da_Soloud_setPanAbsolute Soloud_setPanAbsolute;
    da_Soloud_setChannelVolume Soloud_setChannelVolume;
    da_Soloud_setVolume Soloud_setVolume;
    da_Soloud_setDelaySamples Soloud_setDelaySamples;
    da_Soloud_fadeVolume Soloud_fadeVolume;
    da_Soloud_fadePan Soloud_fadePan;
    da_Soloud_fadeRelativePlaySpeed Soloud_fadeRelativePlaySpeed;
    da_Soloud_fadeGlobalVolume Soloud_fadeGlobalVolume;
    da_Soloud_schedulePause Soloud_schedulePause;
    da_Soloud_scheduleStop Soloud_scheduleStop;
    da_Soloud_oscillateVolume Soloud_oscillateVolume;
    da_Soloud_oscillatePan Soloud_oscillatePan;
    da_Soloud_oscillateRelativePlaySpeed Soloud_oscillateRelativePlaySpeed;
    da_Soloud_oscillateGlobalVolume Soloud_oscillateGlobalVolume;
    da_Soloud_setGlobalFilter Soloud_setGlobalFilter;
    da_Soloud_setVisualizationEnable Soloud_setVisualizationEnable;
    da_Soloud_calcFFT Soloud_calcFFT;
    da_Soloud_getWave Soloud_getWave;
    da_Soloud_getApproximateVolume Soloud_getApproximateVolume;
    da_Soloud_getLoopCount Soloud_getLoopCount;
    da_Soloud_getInfo Soloud_getInfo;
    da_Soloud_createVoiceGroup Soloud_createVoiceGroup;
    da_Soloud_destroyVoiceGroup Soloud_destroyVoiceGroup;
    da_Soloud_addVoiceToGroup Soloud_addVoiceToGroup;
    da_Soloud_isVoiceGroup Soloud_isVoiceGroup;
    da_Soloud_isVoiceGroupEmpty Soloud_isVoiceGroupEmpty;
    da_Soloud_update3dAudio Soloud_update3dAudio;
    da_Soloud_set3dSoundSpeed Soloud_set3dSoundSpeed;
    da_Soloud_get3dSoundSpeed Soloud_get3dSoundSpeed;
    da_Soloud_set3dListenerParametersEx Soloud_set3dListenerParametersEx;
    da_Soloud_set3dListenerPosition Soloud_set3dListenerPosition;
    da_Soloud_set3dListenerAt Soloud_set3dListenerAt;
    da_Soloud_set3dListenerUp Soloud_set3dListenerUp;
    da_Soloud_set3dListenerVelocity Soloud_set3dListenerVelocity;
    da_Soloud_set3dSourceParametersEx Soloud_set3dSourceParametersEx;
    da_Soloud_set3dSourcePosition Soloud_set3dSourcePosition;
    da_Soloud_set3dSourceVelocity Soloud_set3dSourceVelocity;
    da_Soloud_set3dSourceMinMaxDistance Soloud_set3dSourceMinMaxDistance;
    da_Soloud_set3dSourceAttenuation Soloud_set3dSourceAttenuation;
    da_Soloud_set3dSourceDopplerFactor Soloud_set3dSourceDopplerFactor;
    da_Soloud_mix Soloud_mix;
    da_Soloud_mixSigned16 Soloud_mixSigned16;
    da_Ay_create Ay_create;
    da_Ay_destroy Ay_destroy;
    da_Ay_setVolume Ay_setVolume;
    da_Ay_setLooping Ay_setLooping;
    da_Ay_setAutoStop Ay_setAutoStop;
    da_Ay_set3dMinMaxDistance Ay_set3dMinMaxDistance;
    da_Ay_set3dAttenuation Ay_set3dAttenuation;
    da_Ay_set3dDopplerFactor Ay_set3dDopplerFactor;
    da_Ay_set3dListenerRelative Ay_set3dListenerRelative;
    da_Ay_set3dDistanceDelay Ay_set3dDistanceDelay;
    da_Ay_set3dColliderEx Ay_set3dColliderEx;
    da_Ay_set3dAttenuator Ay_set3dAttenuator;
    da_Ay_setInaudibleBehavior Ay_setInaudibleBehavior;
    da_Ay_setLoopPoint Ay_setLoopPoint;
    da_Ay_getLoopPoint Ay_getLoopPoint;
    da_Ay_setFilter Ay_setFilter;
    da_Ay_stop Ay_stop;
    da_BassboostFilter_create BassboostFilter_create;
    da_BassboostFilter_destroy BassboostFilter_destroy;
    da_BassboostFilter_getParamCount BassboostFilter_getParamCount;
    da_BassboostFilter_getParamName BassboostFilter_getParamName;
    da_BassboostFilter_getParamType BassboostFilter_getParamType;
    da_BassboostFilter_getParamMax BassboostFilter_getParamMax;
    da_BassboostFilter_getParamMin BassboostFilter_getParamMin;
    da_BassboostFilter_setParams BassboostFilter_setParams;
    da_BiquadResonantFilter_create BiquadResonantFilter_create;
    da_BiquadResonantFilter_destroy BiquadResonantFilter_destroy;
    da_BiquadResonantFilter_getParamCount BiquadResonantFilter_getParamCount;
    da_BiquadResonantFilter_getParamName BiquadResonantFilter_getParamName;
    da_BiquadResonantFilter_getParamType BiquadResonantFilter_getParamType;
    da_BiquadResonantFilter_getParamMax BiquadResonantFilter_getParamMax;
    da_BiquadResonantFilter_getParamMin BiquadResonantFilter_getParamMin;
    da_BiquadResonantFilter_setParams BiquadResonantFilter_setParams;
    da_Bus_create Bus_create;
    da_Bus_destroy Bus_destroy;
    da_Bus_setFilter Bus_setFilter;
    da_Bus_playEx Bus_playEx;
    da_Bus_playClockedEx Bus_playClockedEx;
    da_Bus_play3dEx Bus_play3dEx;
    da_Bus_play3dClockedEx Bus_play3dClockedEx;
    da_Bus_setChannels Bus_setChannels;
    da_Bus_setVisualizationEnable Bus_setVisualizationEnable;
    da_Bus_annexSound Bus_annexSound;
    da_Bus_calcFFT Bus_calcFFT;
    da_Bus_getWave Bus_getWave;
    da_Bus_getApproximateVolume Bus_getApproximateVolume;
    da_Bus_getActiveVoiceCount Bus_getActiveVoiceCount;
    da_Bus_getResampler Bus_getResampler;
    da_Bus_setResampler Bus_setResampler;
    da_Bus_setVolume Bus_setVolume;
    da_Bus_setLooping Bus_setLooping;
    da_Bus_setAutoStop Bus_setAutoStop;
    da_Bus_set3dMinMaxDistance Bus_set3dMinMaxDistance;
    da_Bus_set3dAttenuation Bus_set3dAttenuation;
    da_Bus_set3dDopplerFactor Bus_set3dDopplerFactor;
    da_Bus_set3dListenerRelative Bus_set3dListenerRelative;
    da_Bus_set3dDistanceDelay Bus_set3dDistanceDelay;
    da_Bus_set3dColliderEx Bus_set3dColliderEx;
    da_Bus_set3dAttenuator Bus_set3dAttenuator;
    da_Bus_setInaudibleBehavior Bus_setInaudibleBehavior;
    da_Bus_setLoopPoint Bus_setLoopPoint;
    da_Bus_getLoopPoint Bus_getLoopPoint;
    da_Bus_stop Bus_stop;
    da_DCRemovalFilter_create DCRemovalFilter_create;
    da_DCRemovalFilter_destroy DCRemovalFilter_destroy;
    da_DCRemovalFilter_setParamsEx DCRemovalFilter_setParamsEx;
    da_DCRemovalFilter_getParamCount DCRemovalFilter_getParamCount;
    da_DCRemovalFilter_getParamName DCRemovalFilter_getParamName;
    da_DCRemovalFilter_getParamType DCRemovalFilter_getParamType;
    da_DCRemovalFilter_getParamMax DCRemovalFilter_getParamMax;
    da_DCRemovalFilter_getParamMin DCRemovalFilter_getParamMin;
    da_EchoFilter_create EchoFilter_create;
    da_EchoFilter_destroy EchoFilter_destroy;
    da_EchoFilter_getParamCount EchoFilter_getParamCount;
    da_EchoFilter_getParamName EchoFilter_getParamName;
    da_EchoFilter_getParamType EchoFilter_getParamType;
    da_EchoFilter_getParamMax EchoFilter_getParamMax;
    da_EchoFilter_getParamMin EchoFilter_getParamMin;
    da_EchoFilter_setParamsEx EchoFilter_setParamsEx;
    da_FFTFilter_create FFTFilter_create;
    da_FFTFilter_destroy FFTFilter_destroy;
    da_FFTFilter_getParamCount FFTFilter_getParamCount;
    da_FFTFilter_getParamName FFTFilter_getParamName;
    da_FFTFilter_getParamType FFTFilter_getParamType;
    da_FFTFilter_getParamMax FFTFilter_getParamMax;
    da_FFTFilter_getParamMin FFTFilter_getParamMin;
    da_FlangerFilter_create FlangerFilter_create;
    da_FlangerFilter_destroy FlangerFilter_destroy;
    da_FlangerFilter_getParamCount FlangerFilter_getParamCount;
    da_FlangerFilter_getParamName FlangerFilter_getParamName;
    da_FlangerFilter_getParamType FlangerFilter_getParamType;
    da_FlangerFilter_getParamMax FlangerFilter_getParamMax;
    da_FlangerFilter_getParamMin FlangerFilter_getParamMin;
    da_FlangerFilter_setParams FlangerFilter_setParams;
    da_FreeverbFilter_create FreeverbFilter_create;
    da_FreeverbFilter_destroy FreeverbFilter_destroy;
    da_FreeverbFilter_getParamCount FreeverbFilter_getParamCount;
    da_FreeverbFilter_getParamName FreeverbFilter_getParamName;
    da_FreeverbFilter_getParamType FreeverbFilter_getParamType;
    da_FreeverbFilter_getParamMax FreeverbFilter_getParamMax;
    da_FreeverbFilter_getParamMin FreeverbFilter_getParamMin;
    da_FreeverbFilter_setParams FreeverbFilter_setParams;
    da_LofiFilter_create LofiFilter_create;
    da_LofiFilter_destroy LofiFilter_destroy;
    da_LofiFilter_getParamCount LofiFilter_getParamCount;
    da_LofiFilter_getParamName LofiFilter_getParamName;
    da_LofiFilter_getParamType LofiFilter_getParamType;
    da_LofiFilter_getParamMax LofiFilter_getParamMax;
    da_LofiFilter_getParamMin LofiFilter_getParamMin;
    da_LofiFilter_setParams LofiFilter_setParams;
    da_Monotone_create Monotone_create;
    da_Monotone_destroy Monotone_destroy;
    da_Monotone_setParamsEx Monotone_setParamsEx;
    da_Monotone_load Monotone_load;
    da_Monotone_loadMemEx Monotone_loadMemEx;
    da_Monotone_loadFile Monotone_loadFile;
    da_Monotone_setVolume Monotone_setVolume;
    da_Monotone_setLooping Monotone_setLooping;
    da_Monotone_setAutoStop Monotone_setAutoStop;
    da_Monotone_set3dMinMaxDistance Monotone_set3dMinMaxDistance;
    da_Monotone_set3dAttenuation Monotone_set3dAttenuation;
    da_Monotone_set3dDopplerFactor Monotone_set3dDopplerFactor;
    da_Monotone_set3dListenerRelative Monotone_set3dListenerRelative;
    da_Monotone_set3dDistanceDelay Monotone_set3dDistanceDelay;
    da_Monotone_set3dColliderEx Monotone_set3dColliderEx;
    da_Monotone_set3dAttenuator Monotone_set3dAttenuator;
    da_Monotone_setInaudibleBehavior Monotone_setInaudibleBehavior;
    da_Monotone_setLoopPoint Monotone_setLoopPoint;
    da_Monotone_getLoopPoint Monotone_getLoopPoint;
    da_Monotone_setFilter Monotone_setFilter;
    da_Monotone_stop Monotone_stop;
    da_Noise_create Noise_create;
    da_Noise_destroy Noise_destroy;
    da_Noise_setOctaveScale Noise_setOctaveScale;
    da_Noise_setType Noise_setType;
    da_Noise_setVolume Noise_setVolume;
    da_Noise_setLooping Noise_setLooping;
    da_Noise_setAutoStop Noise_setAutoStop;
    da_Noise_set3dMinMaxDistance Noise_set3dMinMaxDistance;
    da_Noise_set3dAttenuation Noise_set3dAttenuation;
    da_Noise_set3dDopplerFactor Noise_set3dDopplerFactor;
    da_Noise_set3dListenerRelative Noise_set3dListenerRelative;
    da_Noise_set3dDistanceDelay Noise_set3dDistanceDelay;
    da_Noise_set3dColliderEx Noise_set3dColliderEx;
    da_Noise_set3dAttenuator Noise_set3dAttenuator;
    da_Noise_setInaudibleBehavior Noise_setInaudibleBehavior;
    da_Noise_setLoopPoint Noise_setLoopPoint;
    da_Noise_getLoopPoint Noise_getLoopPoint;
    da_Noise_setFilter Noise_setFilter;
    da_Noise_stop Noise_stop;
    da_Openmpt_create Openmpt_create;
    da_Openmpt_destroy Openmpt_destroy;
    da_Openmpt_load Openmpt_load;
    da_Openmpt_loadMemEx Openmpt_loadMemEx;
    da_Openmpt_loadFile Openmpt_loadFile;
    da_Openmpt_setVolume Openmpt_setVolume;
    da_Openmpt_setLooping Openmpt_setLooping;
    da_Openmpt_setAutoStop Openmpt_setAutoStop;
    da_Openmpt_set3dMinMaxDistance Openmpt_set3dMinMaxDistance;
    da_Openmpt_set3dAttenuation Openmpt_set3dAttenuation;
    da_Openmpt_set3dDopplerFactor Openmpt_set3dDopplerFactor;
    da_Openmpt_set3dListenerRelative Openmpt_set3dListenerRelative;
    da_Openmpt_set3dDistanceDelay Openmpt_set3dDistanceDelay;
    da_Openmpt_set3dColliderEx Openmpt_set3dColliderEx;
    da_Openmpt_set3dAttenuator Openmpt_set3dAttenuator;
    da_Openmpt_setInaudibleBehavior Openmpt_setInaudibleBehavior;
    da_Openmpt_setLoopPoint Openmpt_setLoopPoint;
    da_Openmpt_getLoopPoint Openmpt_getLoopPoint;
    da_Openmpt_setFilter Openmpt_setFilter;
    da_Openmpt_stop Openmpt_stop;
    da_Queue_create Queue_create;
    da_Queue_destroy Queue_destroy;
    da_Queue_play Queue_play;
    da_Queue_getQueueCount Queue_getQueueCount;
    da_Queue_isCurrentlyPlaying Queue_isCurrentlyPlaying;
    da_Queue_setParamsFromAudioSource Queue_setParamsFromAudioSource;
    da_Queue_setParamsEx Queue_setParamsEx;
    da_Queue_setVolume Queue_setVolume;
    da_Queue_setLooping Queue_setLooping;
    da_Queue_setAutoStop Queue_setAutoStop;
    da_Queue_set3dMinMaxDistance Queue_set3dMinMaxDistance;
    da_Queue_set3dAttenuation Queue_set3dAttenuation;
    da_Queue_set3dDopplerFactor Queue_set3dDopplerFactor;
    da_Queue_set3dListenerRelative Queue_set3dListenerRelative;
    da_Queue_set3dDistanceDelay Queue_set3dDistanceDelay;
    da_Queue_set3dColliderEx Queue_set3dColliderEx;
    da_Queue_set3dAttenuator Queue_set3dAttenuator;
    da_Queue_setInaudibleBehavior Queue_setInaudibleBehavior;
    da_Queue_setLoopPoint Queue_setLoopPoint;
    da_Queue_getLoopPoint Queue_getLoopPoint;
    da_Queue_setFilter Queue_setFilter;
    da_Queue_stop Queue_stop;
    da_RobotizeFilter_create RobotizeFilter_create;
    da_RobotizeFilter_destroy RobotizeFilter_destroy;
    da_RobotizeFilter_getParamCount RobotizeFilter_getParamCount;
    da_RobotizeFilter_getParamName RobotizeFilter_getParamName;
    da_RobotizeFilter_getParamType RobotizeFilter_getParamType;
    da_RobotizeFilter_getParamMax RobotizeFilter_getParamMax;
    da_RobotizeFilter_getParamMin RobotizeFilter_getParamMin;
    da_RobotizeFilter_setParams RobotizeFilter_setParams;
    da_Sfxr_create Sfxr_create;
    da_Sfxr_destroy Sfxr_destroy;
    da_Sfxr_resetParams Sfxr_resetParams;
    da_Sfxr_loadParams Sfxr_loadParams;
    da_Sfxr_loadParamsMemEx Sfxr_loadParamsMemEx;
    da_Sfxr_loadParamsFile Sfxr_loadParamsFile;
    da_Sfxr_loadPreset Sfxr_loadPreset;
    da_Sfxr_setVolume Sfxr_setVolume;
    da_Sfxr_setLooping Sfxr_setLooping;
    da_Sfxr_setAutoStop Sfxr_setAutoStop;
    da_Sfxr_set3dMinMaxDistance Sfxr_set3dMinMaxDistance;
    da_Sfxr_set3dAttenuation Sfxr_set3dAttenuation;
    da_Sfxr_set3dDopplerFactor Sfxr_set3dDopplerFactor;
    da_Sfxr_set3dListenerRelative Sfxr_set3dListenerRelative;
    da_Sfxr_set3dDistanceDelay Sfxr_set3dDistanceDelay;
    da_Sfxr_set3dColliderEx Sfxr_set3dColliderEx;
    da_Sfxr_set3dAttenuator Sfxr_set3dAttenuator;
    da_Sfxr_setInaudibleBehavior Sfxr_setInaudibleBehavior;
    da_Sfxr_setLoopPoint Sfxr_setLoopPoint;
    da_Sfxr_getLoopPoint Sfxr_getLoopPoint;
    da_Sfxr_setFilter Sfxr_setFilter;
    da_Sfxr_stop Sfxr_stop;
    da_Speech_create Speech_create;
    da_Speech_destroy Speech_destroy;
    da_Speech_setText Speech_setText;
    da_Speech_setParamsEx Speech_setParamsEx;
    da_Speech_setVolume Speech_setVolume;
    da_Speech_setLooping Speech_setLooping;
    da_Speech_setAutoStop Speech_setAutoStop;
    da_Speech_set3dMinMaxDistance Speech_set3dMinMaxDistance;
    da_Speech_set3dAttenuation Speech_set3dAttenuation;
    da_Speech_set3dDopplerFactor Speech_set3dDopplerFactor;
    da_Speech_set3dListenerRelative Speech_set3dListenerRelative;
    da_Speech_set3dDistanceDelay Speech_set3dDistanceDelay;
    da_Speech_set3dColliderEx Speech_set3dColliderEx;
    da_Speech_set3dAttenuator Speech_set3dAttenuator;
    da_Speech_setInaudibleBehavior Speech_setInaudibleBehavior;
    da_Speech_setLoopPoint Speech_setLoopPoint;
    da_Speech_getLoopPoint Speech_getLoopPoint;
    da_Speech_setFilter Speech_setFilter;
    da_Speech_stop Speech_stop;
    da_TedSid_create TedSid_create;
    da_TedSid_destroy TedSid_destroy;
    da_TedSid_load TedSid_load;
    da_TedSid_loadMemEx TedSid_loadMemEx;
    da_TedSid_loadFile TedSid_loadFile;
    da_TedSid_setVolume TedSid_setVolume;
    da_TedSid_setLooping TedSid_setLooping;
    da_TedSid_setAutoStop TedSid_setAutoStop;
    da_TedSid_set3dMinMaxDistance TedSid_set3dMinMaxDistance;
    da_TedSid_set3dAttenuation TedSid_set3dAttenuation;
    da_TedSid_set3dDopplerFactor TedSid_set3dDopplerFactor;
    da_TedSid_set3dListenerRelative TedSid_set3dListenerRelative;
    da_TedSid_set3dDistanceDelay TedSid_set3dDistanceDelay;
    da_TedSid_set3dColliderEx TedSid_set3dColliderEx;
    da_TedSid_set3dAttenuator TedSid_set3dAttenuator;
    da_TedSid_setInaudibleBehavior TedSid_setInaudibleBehavior;
    da_TedSid_setLoopPoint TedSid_setLoopPoint;
    da_TedSid_getLoopPoint TedSid_getLoopPoint;
    da_TedSid_setFilter TedSid_setFilter;
    da_TedSid_stop TedSid_stop;
    da_Vic_create Vic_create;
    da_Vic_destroy Vic_destroy;
    da_Vic_setModel Vic_setModel;
    da_Vic_getModel Vic_getModel;
    da_Vic_setRegister Vic_setRegister;
    da_Vic_getRegister Vic_getRegister;
    da_Vic_setVolume Vic_setVolume;
    da_Vic_setLooping Vic_setLooping;
    da_Vic_setAutoStop Vic_setAutoStop;
    da_Vic_set3dMinMaxDistance Vic_set3dMinMaxDistance;
    da_Vic_set3dAttenuation Vic_set3dAttenuation;
    da_Vic_set3dDopplerFactor Vic_set3dDopplerFactor;
    da_Vic_set3dListenerRelative Vic_set3dListenerRelative;
    da_Vic_set3dDistanceDelay Vic_set3dDistanceDelay;
    da_Vic_set3dColliderEx Vic_set3dColliderEx;
    da_Vic_set3dAttenuator Vic_set3dAttenuator;
    da_Vic_setInaudibleBehavior Vic_setInaudibleBehavior;
    da_Vic_setLoopPoint Vic_setLoopPoint;
    da_Vic_getLoopPoint Vic_getLoopPoint;
    da_Vic_setFilter Vic_setFilter;
    da_Vic_stop Vic_stop;
    da_Vizsn_create Vizsn_create;
    da_Vizsn_destroy Vizsn_destroy;
    da_Vizsn_setText Vizsn_setText;
    da_Vizsn_setVolume Vizsn_setVolume;
    da_Vizsn_setLooping Vizsn_setLooping;
    da_Vizsn_setAutoStop Vizsn_setAutoStop;
    da_Vizsn_set3dMinMaxDistance Vizsn_set3dMinMaxDistance;
    da_Vizsn_set3dAttenuation Vizsn_set3dAttenuation;
    da_Vizsn_set3dDopplerFactor Vizsn_set3dDopplerFactor;
    da_Vizsn_set3dListenerRelative Vizsn_set3dListenerRelative;
    da_Vizsn_set3dDistanceDelay Vizsn_set3dDistanceDelay;
    da_Vizsn_set3dColliderEx Vizsn_set3dColliderEx;
    da_Vizsn_set3dAttenuator Vizsn_set3dAttenuator;
    da_Vizsn_setInaudibleBehavior Vizsn_setInaudibleBehavior;
    da_Vizsn_setLoopPoint Vizsn_setLoopPoint;
    da_Vizsn_getLoopPoint Vizsn_getLoopPoint;
    da_Vizsn_setFilter Vizsn_setFilter;
    da_Vizsn_stop Vizsn_stop;
    da_Wav_create Wav_create;
    da_Wav_destroy Wav_destroy;
    da_Wav_load Wav_load;
    da_Wav_loadMemEx Wav_loadMemEx;
    da_Wav_loadFile Wav_loadFile;
    da_Wav_loadRawWave8Ex Wav_loadRawWave8Ex;
    da_Wav_loadRawWave16Ex Wav_loadRawWave16Ex;
    da_Wav_loadRawWaveEx Wav_loadRawWaveEx;
    da_Wav_getLength Wav_getLength;
    da_Wav_setVolume Wav_setVolume;
    da_Wav_setLooping Wav_setLooping;
    da_Wav_setAutoStop Wav_setAutoStop;
    da_Wav_set3dMinMaxDistance Wav_set3dMinMaxDistance;
    da_Wav_set3dAttenuation Wav_set3dAttenuation;
    da_Wav_set3dDopplerFactor Wav_set3dDopplerFactor;
    da_Wav_set3dListenerRelative Wav_set3dListenerRelative;
    da_Wav_set3dDistanceDelay Wav_set3dDistanceDelay;
    da_Wav_set3dColliderEx Wav_set3dColliderEx;
    da_Wav_set3dAttenuator Wav_set3dAttenuator;
    da_Wav_setInaudibleBehavior Wav_setInaudibleBehavior;
    da_Wav_setLoopPoint Wav_setLoopPoint;
    da_Wav_getLoopPoint Wav_getLoopPoint;
    da_Wav_setFilter Wav_setFilter;
    da_Wav_stop Wav_stop;
    da_WaveShaperFilter_create WaveShaperFilter_create;
    da_WaveShaperFilter_destroy WaveShaperFilter_destroy;
    da_WaveShaperFilter_setParams WaveShaperFilter_setParams;
    da_WaveShaperFilter_getParamCount WaveShaperFilter_getParamCount;
    da_WaveShaperFilter_getParamName WaveShaperFilter_getParamName;
    da_WaveShaperFilter_getParamType WaveShaperFilter_getParamType;
    da_WaveShaperFilter_getParamMax WaveShaperFilter_getParamMax;
    da_WaveShaperFilter_getParamMin WaveShaperFilter_getParamMin;
    da_WavStream_create WavStream_create;
    da_WavStream_destroy WavStream_destroy;
    da_WavStream_load WavStream_load;
    da_WavStream_loadMemEx WavStream_loadMemEx;
    da_WavStream_loadToMem WavStream_loadToMem;
    da_WavStream_loadFile WavStream_loadFile;
    da_WavStream_loadFileToMem WavStream_loadFileToMem;
    da_WavStream_getLength WavStream_getLength;
    da_WavStream_setVolume WavStream_setVolume;
    da_WavStream_setLooping WavStream_setLooping;
    da_WavStream_setAutoStop WavStream_setAutoStop;
    da_WavStream_set3dMinMaxDistance WavStream_set3dMinMaxDistance;
    da_WavStream_set3dAttenuation WavStream_set3dAttenuation;
    da_WavStream_set3dDopplerFactor WavStream_set3dDopplerFactor;
    da_WavStream_set3dListenerRelative WavStream_set3dListenerRelative;
    da_WavStream_set3dDistanceDelay WavStream_set3dDistanceDelay;
    da_WavStream_set3dColliderEx WavStream_set3dColliderEx;
    da_WavStream_set3dAttenuator WavStream_set3dAttenuator;
    da_WavStream_setInaudibleBehavior WavStream_setInaudibleBehavior;
    da_WavStream_setLoopPoint WavStream_setLoopPoint;
    da_WavStream_getLoopPoint WavStream_getLoopPoint;
    da_WavStream_setFilter WavStream_setFilter;
    da_WavStream_stop WavStream_stop;

}

private
{
    SharedLib lib;
    SLSupport loadedVersion;
}

void unloadOpenCL()
{
    if (lib != invalidHandle)
    {
        lib.unload();
    }
}

SLSupport loadedSoloudVersion() { return loadedVersion; }
bool isSoloudLoaded() { return lib != invalidHandle; }

SLSupport loadSoloud()
{
    version(Windows)
    {
        version(X86)
        {
            const(char)[][2] libNames =
            [
                "soloud.dll",
                "soloud_x86.dll"
            ];
        }
        else version(X86_64)
        {
            const(char)[][2] libNames =
            [
                "soloud.dll",
                "soloud_x64.dll"
            ];
        }
    }
    else version(OSX)
    {
        const(char)[][1] libNames =
        [
            "libsoloud.dylib"
        ];
    }
    else version(Posix)
    {
        const(char)[][2] libNames =
        [
            "libsoloud.so",
            "libsoloud.so.1"
        ];
    }
    else static assert(0, "bindbc-soloud is not yet supported on this platform.");

    SLSupport ret;
    foreach(name; libNames)
    {
        ret = loadSoloud(name.ptr);
        if (ret != SLSupport.noLibrary)
            break;
    }
    return ret;
}

SLSupport loadSoloud(const(char)* libName)
{
    lib = load(libName);
    if(lib == invalidHandle)
    {
        return SLSupport.noLibrary;
    }

    auto errCount = errorCount();
    loadedVersion = SLSupport.badLibrary;

    lib.bindSymbol(cast(void**)&Soloud_create, "Soloud_create");
    lib.bindSymbol(cast(void**)&Soloud_destroy, "Soloud_destroy");
    lib.bindSymbol(cast(void**)&Soloud_initEx, "Soloud_initEx");
    //lib.bindSymbol(cast(void**)&Soloud_pause, "Soloud_pause");
    //lib.bindSymbol(cast(void**)&Soloud_resume, "Soloud_resume");
    lib.bindSymbol(cast(void**)&Soloud_deinit, "Soloud_deinit");
    lib.bindSymbol(cast(void**)&Soloud_getVersion, "Soloud_getVersion");
    lib.bindSymbol(cast(void**)&Soloud_getErrorString, "Soloud_getErrorString");
    lib.bindSymbol(cast(void**)&Soloud_getBackendId, "Soloud_getBackendId");
    lib.bindSymbol(cast(void**)&Soloud_getBackendString, "Soloud_getBackendString");
    lib.bindSymbol(cast(void**)&Soloud_getBackendChannels, "Soloud_getBackendChannels");
    lib.bindSymbol(cast(void**)&Soloud_getBackendSamplerate, "Soloud_getBackendSamplerate");
    lib.bindSymbol(cast(void**)&Soloud_getBackendBufferSize, "Soloud_getBackendBufferSize");
    lib.bindSymbol(cast(void**)&Soloud_setSpeakerPosition, "Soloud_setSpeakerPosition");
    lib.bindSymbol(cast(void**)&Soloud_getSpeakerPosition, "Soloud_getSpeakerPosition");
    lib.bindSymbol(cast(void**)&Soloud_playEx, "Soloud_playEx");
    lib.bindSymbol(cast(void**)&Soloud_playClockedEx, "Soloud_playClockedEx");
    lib.bindSymbol(cast(void**)&Soloud_play3dEx, "Soloud_play3dEx");
    lib.bindSymbol(cast(void**)&Soloud_play3dClockedEx, "Soloud_play3dClockedEx");
    lib.bindSymbol(cast(void**)&Soloud_playBackgroundEx, "Soloud_playBackgroundEx");
    lib.bindSymbol(cast(void**)&Soloud_seek, "Soloud_seek");
    lib.bindSymbol(cast(void**)&Soloud_stop, "Soloud_stop");
    lib.bindSymbol(cast(void**)&Soloud_stopAll, "Soloud_stopAll");
    lib.bindSymbol(cast(void**)&Soloud_stopAudioSource, "Soloud_stopAudioSource");
    lib.bindSymbol(cast(void**)&Soloud_countAudioSource, "Soloud_countAudioSource");
    lib.bindSymbol(cast(void**)&Soloud_setFilterParameter, "Soloud_setFilterParameter");
    lib.bindSymbol(cast(void**)&Soloud_getFilterParameter, "Soloud_getFilterParameter");
    lib.bindSymbol(cast(void**)&Soloud_fadeFilterParameter, "Soloud_fadeFilterParameter");
    lib.bindSymbol(cast(void**)&Soloud_oscillateFilterParameter, "Soloud_oscillateFilterParameter");
    lib.bindSymbol(cast(void**)&Soloud_getStreamTime, "Soloud_getStreamTime");
    lib.bindSymbol(cast(void**)&Soloud_getStreamPosition, "Soloud_getStreamPosition");
    lib.bindSymbol(cast(void**)&Soloud_getPause, "Soloud_getPause");
    lib.bindSymbol(cast(void**)&Soloud_getVolume, "Soloud_getVolume");
    lib.bindSymbol(cast(void**)&Soloud_getOverallVolume, "Soloud_getOverallVolume");
    lib.bindSymbol(cast(void**)&Soloud_getPan, "Soloud_getPan");
    lib.bindSymbol(cast(void**)&Soloud_getSamplerate, "Soloud_getSamplerate");
    lib.bindSymbol(cast(void**)&Soloud_getProtectVoice, "Soloud_getProtectVoice");
    lib.bindSymbol(cast(void**)&Soloud_getActiveVoiceCount, "Soloud_getActiveVoiceCount");
    lib.bindSymbol(cast(void**)&Soloud_getVoiceCount, "Soloud_getVoiceCount");
    lib.bindSymbol(cast(void**)&Soloud_isValidVoiceHandle, "Soloud_isValidVoiceHandle");
    lib.bindSymbol(cast(void**)&Soloud_getRelativePlaySpeed, "Soloud_getRelativePlaySpeed");
    lib.bindSymbol(cast(void**)&Soloud_getPostClipScaler, "Soloud_getPostClipScaler");
    //lib.bindSymbol(cast(void**)&Soloud_getMainResampler, "Soloud_getMainResampler");
    lib.bindSymbol(cast(void**)&Soloud_getGlobalVolume, "Soloud_getGlobalVolume");
    lib.bindSymbol(cast(void**)&Soloud_getMaxActiveVoiceCount, "Soloud_getMaxActiveVoiceCount");
    lib.bindSymbol(cast(void**)&Soloud_getLooping, "Soloud_getLooping");
    //lib.bindSymbol(cast(void**)&Soloud_getAutoStop, "Soloud_getAutoStop");
    lib.bindSymbol(cast(void**)&Soloud_getLoopPoint, "Soloud_getLoopPoint");
    lib.bindSymbol(cast(void**)&Soloud_setLoopPoint, "Soloud_setLoopPoint");
    lib.bindSymbol(cast(void**)&Soloud_setLooping, "Soloud_setLooping");
    //lib.bindSymbol(cast(void**)&Soloud_setAutoStop, "Soloud_setAutoStop");
    lib.bindSymbol(cast(void**)&Soloud_setMaxActiveVoiceCount, "Soloud_setMaxActiveVoiceCount");
    lib.bindSymbol(cast(void**)&Soloud_setInaudibleBehavior, "Soloud_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Soloud_setGlobalVolume, "Soloud_setGlobalVolume");
    lib.bindSymbol(cast(void**)&Soloud_setPostClipScaler, "Soloud_setPostClipScaler");
    //lib.bindSymbol(cast(void**)&Soloud_setMainResampler, "Soloud_setMainResampler");
    lib.bindSymbol(cast(void**)&Soloud_setPause, "Soloud_setPause");
    lib.bindSymbol(cast(void**)&Soloud_setPauseAll, "Soloud_setPauseAll");
    lib.bindSymbol(cast(void**)&Soloud_setRelativePlaySpeed, "Soloud_setRelativePlaySpeed");
    lib.bindSymbol(cast(void**)&Soloud_setProtectVoice, "Soloud_setProtectVoice");
    lib.bindSymbol(cast(void**)&Soloud_setSamplerate, "Soloud_setSamplerate");
    lib.bindSymbol(cast(void**)&Soloud_setPan, "Soloud_setPan");
    lib.bindSymbol(cast(void**)&Soloud_setPanAbsolute, "Soloud_setPanAbsolute");
    //lib.bindSymbol(cast(void**)&Soloud_setChannelVolume, "Soloud_setChannelVolume");
    lib.bindSymbol(cast(void**)&Soloud_setVolume, "Soloud_setVolume");
    lib.bindSymbol(cast(void**)&Soloud_setDelaySamples, "Soloud_setDelaySamples");
    lib.bindSymbol(cast(void**)&Soloud_fadeVolume, "Soloud_fadeVolume");
    lib.bindSymbol(cast(void**)&Soloud_fadePan, "Soloud_fadePan");
    lib.bindSymbol(cast(void**)&Soloud_fadeRelativePlaySpeed, "Soloud_fadeRelativePlaySpeed");
    lib.bindSymbol(cast(void**)&Soloud_fadeGlobalVolume, "Soloud_fadeGlobalVolume");
    lib.bindSymbol(cast(void**)&Soloud_schedulePause, "Soloud_schedulePause");
    lib.bindSymbol(cast(void**)&Soloud_scheduleStop, "Soloud_scheduleStop");
    lib.bindSymbol(cast(void**)&Soloud_oscillateVolume, "Soloud_oscillateVolume");
    lib.bindSymbol(cast(void**)&Soloud_oscillatePan, "Soloud_oscillatePan");
    lib.bindSymbol(cast(void**)&Soloud_oscillateRelativePlaySpeed, "Soloud_oscillateRelativePlaySpeed");
    lib.bindSymbol(cast(void**)&Soloud_oscillateGlobalVolume, "Soloud_oscillateGlobalVolume");
    lib.bindSymbol(cast(void**)&Soloud_setGlobalFilter, "Soloud_setGlobalFilter");
    lib.bindSymbol(cast(void**)&Soloud_setVisualizationEnable, "Soloud_setVisualizationEnable");
    lib.bindSymbol(cast(void**)&Soloud_calcFFT, "Soloud_calcFFT");
    lib.bindSymbol(cast(void**)&Soloud_getWave, "Soloud_getWave");
    lib.bindSymbol(cast(void**)&Soloud_getApproximateVolume, "Soloud_getApproximateVolume");
    lib.bindSymbol(cast(void**)&Soloud_getLoopCount, "Soloud_getLoopCount");
    lib.bindSymbol(cast(void**)&Soloud_getInfo, "Soloud_getInfo");
    lib.bindSymbol(cast(void**)&Soloud_createVoiceGroup, "Soloud_createVoiceGroup");
    lib.bindSymbol(cast(void**)&Soloud_destroyVoiceGroup, "Soloud_destroyVoiceGroup");
    lib.bindSymbol(cast(void**)&Soloud_addVoiceToGroup, "Soloud_addVoiceToGroup");
    lib.bindSymbol(cast(void**)&Soloud_isVoiceGroup, "Soloud_isVoiceGroup");
    lib.bindSymbol(cast(void**)&Soloud_isVoiceGroupEmpty, "Soloud_isVoiceGroupEmpty");
    lib.bindSymbol(cast(void**)&Soloud_update3dAudio, "Soloud_update3dAudio");
    lib.bindSymbol(cast(void**)&Soloud_set3dSoundSpeed, "Soloud_set3dSoundSpeed");
    lib.bindSymbol(cast(void**)&Soloud_get3dSoundSpeed, "Soloud_get3dSoundSpeed");
    lib.bindSymbol(cast(void**)&Soloud_set3dListenerParametersEx, "Soloud_set3dListenerParametersEx");
    lib.bindSymbol(cast(void**)&Soloud_set3dListenerPosition, "Soloud_set3dListenerPosition");
    lib.bindSymbol(cast(void**)&Soloud_set3dListenerAt, "Soloud_set3dListenerAt");
    lib.bindSymbol(cast(void**)&Soloud_set3dListenerUp, "Soloud_set3dListenerUp");
    lib.bindSymbol(cast(void**)&Soloud_set3dListenerVelocity, "Soloud_set3dListenerVelocity");
    lib.bindSymbol(cast(void**)&Soloud_set3dSourceParametersEx, "Soloud_set3dSourceParametersEx");
    lib.bindSymbol(cast(void**)&Soloud_set3dSourcePosition, "Soloud_set3dSourcePosition");
    lib.bindSymbol(cast(void**)&Soloud_set3dSourceVelocity, "Soloud_set3dSourceVelocity");
    lib.bindSymbol(cast(void**)&Soloud_set3dSourceMinMaxDistance, "Soloud_set3dSourceMinMaxDistance");
    lib.bindSymbol(cast(void**)&Soloud_set3dSourceAttenuation, "Soloud_set3dSourceAttenuation");
    lib.bindSymbol(cast(void**)&Soloud_set3dSourceDopplerFactor, "Soloud_set3dSourceDopplerFactor");
    lib.bindSymbol(cast(void**)&Soloud_mix, "Soloud_mix");
    lib.bindSymbol(cast(void**)&Soloud_mixSigned16, "Soloud_mixSigned16");
    /*
    lib.bindSymbol(cast(void**)&Ay_create, "Ay_create");
    lib.bindSymbol(cast(void**)&Ay_destroy, "Ay_destroy");
    lib.bindSymbol(cast(void**)&Ay_setVolume, "Ay_setVolume");
    lib.bindSymbol(cast(void**)&Ay_setLooping, "Ay_setLooping");
    lib.bindSymbol(cast(void**)&Ay_setAutoStop, "Ay_setAutoStop");
    lib.bindSymbol(cast(void**)&Ay_set3dMinMaxDistance, "Ay_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Ay_set3dAttenuation, "Ay_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Ay_set3dDopplerFactor, "Ay_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Ay_set3dListenerRelative, "Ay_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Ay_set3dDistanceDelay, "Ay_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Ay_set3dColliderEx, "Ay_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Ay_set3dAttenuator, "Ay_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Ay_setInaudibleBehavior, "Ay_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Ay_setLoopPoint, "Ay_setLoopPoint");
    lib.bindSymbol(cast(void**)&Ay_getLoopPoint, "Ay_getLoopPoint");
    lib.bindSymbol(cast(void**)&Ay_setFilter, "Ay_setFilter");
    lib.bindSymbol(cast(void**)&Ay_stop, "Ay_stop");
    */
    lib.bindSymbol(cast(void**)&BassboostFilter_create, "BassboostFilter_create");
    lib.bindSymbol(cast(void**)&BassboostFilter_destroy, "BassboostFilter_destroy");
    lib.bindSymbol(cast(void**)&BassboostFilter_getParamCount, "BassboostFilter_getParamCount");
    lib.bindSymbol(cast(void**)&BassboostFilter_getParamName, "BassboostFilter_getParamName");
    lib.bindSymbol(cast(void**)&BassboostFilter_getParamType, "BassboostFilter_getParamType");
    lib.bindSymbol(cast(void**)&BassboostFilter_getParamMax, "BassboostFilter_getParamMax");
    lib.bindSymbol(cast(void**)&BassboostFilter_getParamMin, "BassboostFilter_getParamMin");
    lib.bindSymbol(cast(void**)&BassboostFilter_setParams, "BassboostFilter_setParams");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_create, "BiquadResonantFilter_create");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_destroy, "BiquadResonantFilter_destroy");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_getParamCount, "BiquadResonantFilter_getParamCount");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_getParamName, "BiquadResonantFilter_getParamName");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_getParamType, "BiquadResonantFilter_getParamType");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_getParamMax, "BiquadResonantFilter_getParamMax");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_getParamMin, "BiquadResonantFilter_getParamMin");
    lib.bindSymbol(cast(void**)&BiquadResonantFilter_setParams, "BiquadResonantFilter_setParams");
    lib.bindSymbol(cast(void**)&Bus_create, "Bus_create");
    lib.bindSymbol(cast(void**)&Bus_destroy, "Bus_destroy");
    lib.bindSymbol(cast(void**)&Bus_setFilter, "Bus_setFilter");
    lib.bindSymbol(cast(void**)&Bus_playEx, "Bus_playEx");
    lib.bindSymbol(cast(void**)&Bus_playClockedEx, "Bus_playClockedEx");
    lib.bindSymbol(cast(void**)&Bus_play3dEx, "Bus_play3dEx");
    lib.bindSymbol(cast(void**)&Bus_play3dClockedEx, "Bus_play3dClockedEx");
    lib.bindSymbol(cast(void**)&Bus_setChannels, "Bus_setChannels");
    lib.bindSymbol(cast(void**)&Bus_setVisualizationEnable, "Bus_setVisualizationEnable");
    lib.bindSymbol(cast(void**)&Bus_annexSound, "Bus_annexSound");
    lib.bindSymbol(cast(void**)&Bus_calcFFT, "Bus_calcFFT");
    lib.bindSymbol(cast(void**)&Bus_getWave, "Bus_getWave");
    lib.bindSymbol(cast(void**)&Bus_getApproximateVolume, "Bus_getApproximateVolume");
    lib.bindSymbol(cast(void**)&Bus_getActiveVoiceCount, "Bus_getActiveVoiceCount");
    //lib.bindSymbol(cast(void**)&Bus_getResampler, "Bus_getResampler");
    //lib.bindSymbol(cast(void**)&Bus_setResampler, "Bus_setResampler");
    lib.bindSymbol(cast(void**)&Bus_setVolume, "Bus_setVolume");
    lib.bindSymbol(cast(void**)&Bus_setLooping, "Bus_setLooping");
    //lib.bindSymbol(cast(void**)&Bus_setAutoStop, "Bus_setAutoStop");
    lib.bindSymbol(cast(void**)&Bus_set3dMinMaxDistance, "Bus_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Bus_set3dAttenuation, "Bus_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Bus_set3dDopplerFactor, "Bus_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Bus_set3dListenerRelative, "Bus_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Bus_set3dDistanceDelay, "Bus_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Bus_set3dColliderEx, "Bus_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Bus_set3dAttenuator, "Bus_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Bus_setInaudibleBehavior, "Bus_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Bus_setLoopPoint, "Bus_setLoopPoint");
    lib.bindSymbol(cast(void**)&Bus_getLoopPoint, "Bus_getLoopPoint");
    lib.bindSymbol(cast(void**)&Bus_stop, "Bus_stop");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_create, "DCRemovalFilter_create");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_destroy, "DCRemovalFilter_destroy");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_setParamsEx, "DCRemovalFilter_setParamsEx");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_getParamCount, "DCRemovalFilter_getParamCount");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_getParamName, "DCRemovalFilter_getParamName");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_getParamType, "DCRemovalFilter_getParamType");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_getParamMax, "DCRemovalFilter_getParamMax");
    lib.bindSymbol(cast(void**)&DCRemovalFilter_getParamMin, "DCRemovalFilter_getParamMin");
    lib.bindSymbol(cast(void**)&EchoFilter_create, "EchoFilter_create");
    lib.bindSymbol(cast(void**)&EchoFilter_destroy, "EchoFilter_destroy");
    lib.bindSymbol(cast(void**)&EchoFilter_getParamCount, "EchoFilter_getParamCount");
    lib.bindSymbol(cast(void**)&EchoFilter_getParamName, "EchoFilter_getParamName");
    lib.bindSymbol(cast(void**)&EchoFilter_getParamType, "EchoFilter_getParamType");
    lib.bindSymbol(cast(void**)&EchoFilter_getParamMax, "EchoFilter_getParamMax");
    lib.bindSymbol(cast(void**)&EchoFilter_getParamMin, "EchoFilter_getParamMin");
    lib.bindSymbol(cast(void**)&EchoFilter_setParamsEx, "EchoFilter_setParamsEx");
    lib.bindSymbol(cast(void**)&FFTFilter_create, "FFTFilter_create");
    lib.bindSymbol(cast(void**)&FFTFilter_destroy, "FFTFilter_destroy");
    lib.bindSymbol(cast(void**)&FFTFilter_getParamCount, "FFTFilter_getParamCount");
    lib.bindSymbol(cast(void**)&FFTFilter_getParamName, "FFTFilter_getParamName");
    lib.bindSymbol(cast(void**)&FFTFilter_getParamType, "FFTFilter_getParamType");
    lib.bindSymbol(cast(void**)&FFTFilter_getParamMax, "FFTFilter_getParamMax");
    lib.bindSymbol(cast(void**)&FFTFilter_getParamMin, "FFTFilter_getParamMin");
    lib.bindSymbol(cast(void**)&FlangerFilter_create, "FlangerFilter_create");
    lib.bindSymbol(cast(void**)&FlangerFilter_destroy, "FlangerFilter_destroy");
    lib.bindSymbol(cast(void**)&FlangerFilter_getParamCount, "FlangerFilter_getParamCount");
    lib.bindSymbol(cast(void**)&FlangerFilter_getParamName, "FlangerFilter_getParamName");
    lib.bindSymbol(cast(void**)&FlangerFilter_getParamType, "FlangerFilter_getParamType");
    lib.bindSymbol(cast(void**)&FlangerFilter_getParamMax, "FlangerFilter_getParamMax");
    lib.bindSymbol(cast(void**)&FlangerFilter_getParamMin, "FlangerFilter_getParamMin");
    lib.bindSymbol(cast(void**)&FlangerFilter_setParams, "FlangerFilter_setParams");
    lib.bindSymbol(cast(void**)&FreeverbFilter_create, "FreeverbFilter_create");
    lib.bindSymbol(cast(void**)&FreeverbFilter_destroy, "FreeverbFilter_destroy");
    lib.bindSymbol(cast(void**)&FreeverbFilter_getParamCount, "FreeverbFilter_getParamCount");
    lib.bindSymbol(cast(void**)&FreeverbFilter_getParamName, "FreeverbFilter_getParamName");
    lib.bindSymbol(cast(void**)&FreeverbFilter_getParamType, "FreeverbFilter_getParamType");
    lib.bindSymbol(cast(void**)&FreeverbFilter_getParamMax, "FreeverbFilter_getParamMax");
    lib.bindSymbol(cast(void**)&FreeverbFilter_getParamMin, "FreeverbFilter_getParamMin");
    lib.bindSymbol(cast(void**)&FreeverbFilter_setParams, "FreeverbFilter_setParams");
    lib.bindSymbol(cast(void**)&LofiFilter_create, "LofiFilter_create");
    lib.bindSymbol(cast(void**)&LofiFilter_destroy, "LofiFilter_destroy");
    lib.bindSymbol(cast(void**)&LofiFilter_getParamCount, "LofiFilter_getParamCount");
    lib.bindSymbol(cast(void**)&LofiFilter_getParamName, "LofiFilter_getParamName");
    lib.bindSymbol(cast(void**)&LofiFilter_getParamType, "LofiFilter_getParamType");
    lib.bindSymbol(cast(void**)&LofiFilter_getParamMax, "LofiFilter_getParamMax");
    lib.bindSymbol(cast(void**)&LofiFilter_getParamMin, "LofiFilter_getParamMin");
    lib.bindSymbol(cast(void**)&LofiFilter_setParams, "LofiFilter_setParams");
    lib.bindSymbol(cast(void**)&Monotone_create, "Monotone_create");
    lib.bindSymbol(cast(void**)&Monotone_destroy, "Monotone_destroy");
    lib.bindSymbol(cast(void**)&Monotone_setParamsEx, "Monotone_setParamsEx");
    lib.bindSymbol(cast(void**)&Monotone_load, "Monotone_load");
    lib.bindSymbol(cast(void**)&Monotone_loadMemEx, "Monotone_loadMemEx");
    lib.bindSymbol(cast(void**)&Monotone_loadFile, "Monotone_loadFile");
    lib.bindSymbol(cast(void**)&Monotone_setVolume, "Monotone_setVolume");
    lib.bindSymbol(cast(void**)&Monotone_setLooping, "Monotone_setLooping");
    //lib.bindSymbol(cast(void**)&Monotone_setAutoStop, "Monotone_setAutoStop");
    lib.bindSymbol(cast(void**)&Monotone_set3dMinMaxDistance, "Monotone_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Monotone_set3dAttenuation, "Monotone_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Monotone_set3dDopplerFactor, "Monotone_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Monotone_set3dListenerRelative, "Monotone_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Monotone_set3dDistanceDelay, "Monotone_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Monotone_set3dColliderEx, "Monotone_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Monotone_set3dAttenuator, "Monotone_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Monotone_setInaudibleBehavior, "Monotone_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Monotone_setLoopPoint, "Monotone_setLoopPoint");
    lib.bindSymbol(cast(void**)&Monotone_getLoopPoint, "Monotone_getLoopPoint");
    lib.bindSymbol(cast(void**)&Monotone_setFilter, "Monotone_setFilter");
    lib.bindSymbol(cast(void**)&Monotone_stop, "Monotone_stop");
    lib.bindSymbol(cast(void**)&Noise_create, "Noise_create");
    lib.bindSymbol(cast(void**)&Noise_destroy, "Noise_destroy");
    lib.bindSymbol(cast(void**)&Noise_setOctaveScale, "Noise_setOctaveScale");
    lib.bindSymbol(cast(void**)&Noise_setType, "Noise_setType");
    lib.bindSymbol(cast(void**)&Noise_setVolume, "Noise_setVolume");
    lib.bindSymbol(cast(void**)&Noise_setLooping, "Noise_setLooping");
    //lib.bindSymbol(cast(void**)&Noise_setAutoStop, "Noise_setAutoStop");
    lib.bindSymbol(cast(void**)&Noise_set3dMinMaxDistance, "Noise_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Noise_set3dAttenuation, "Noise_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Noise_set3dDopplerFactor, "Noise_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Noise_set3dListenerRelative, "Noise_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Noise_set3dDistanceDelay, "Noise_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Noise_set3dColliderEx, "Noise_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Noise_set3dAttenuator, "Noise_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Noise_setInaudibleBehavior, "Noise_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Noise_setLoopPoint, "Noise_setLoopPoint");
    lib.bindSymbol(cast(void**)&Noise_getLoopPoint, "Noise_getLoopPoint");
    lib.bindSymbol(cast(void**)&Noise_setFilter, "Noise_setFilter");
    lib.bindSymbol(cast(void**)&Noise_stop, "Noise_stop");
    lib.bindSymbol(cast(void**)&Openmpt_create, "Openmpt_create");
    lib.bindSymbol(cast(void**)&Openmpt_destroy, "Openmpt_destroy");
    lib.bindSymbol(cast(void**)&Openmpt_load, "Openmpt_load");
    lib.bindSymbol(cast(void**)&Openmpt_loadMemEx, "Openmpt_loadMemEx");
    lib.bindSymbol(cast(void**)&Openmpt_loadFile, "Openmpt_loadFile");
    lib.bindSymbol(cast(void**)&Openmpt_setVolume, "Openmpt_setVolume");
    lib.bindSymbol(cast(void**)&Openmpt_setLooping, "Openmpt_setLooping");
    //lib.bindSymbol(cast(void**)&Openmpt_setAutoStop, "Openmpt_setAutoStop");
    lib.bindSymbol(cast(void**)&Openmpt_set3dMinMaxDistance, "Openmpt_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Openmpt_set3dAttenuation, "Openmpt_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Openmpt_set3dDopplerFactor, "Openmpt_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Openmpt_set3dListenerRelative, "Openmpt_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Openmpt_set3dDistanceDelay, "Openmpt_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Openmpt_set3dColliderEx, "Openmpt_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Openmpt_set3dAttenuator, "Openmpt_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Openmpt_setInaudibleBehavior, "Openmpt_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Openmpt_setLoopPoint, "Openmpt_setLoopPoint");
    lib.bindSymbol(cast(void**)&Openmpt_getLoopPoint, "Openmpt_getLoopPoint");
    lib.bindSymbol(cast(void**)&Openmpt_setFilter, "Openmpt_setFilter");
    lib.bindSymbol(cast(void**)&Openmpt_stop, "Openmpt_stop");
    lib.bindSymbol(cast(void**)&Queue_create, "Queue_create");
    lib.bindSymbol(cast(void**)&Queue_destroy, "Queue_destroy");
    lib.bindSymbol(cast(void**)&Queue_play, "Queue_play");
    lib.bindSymbol(cast(void**)&Queue_getQueueCount, "Queue_getQueueCount");
    lib.bindSymbol(cast(void**)&Queue_isCurrentlyPlaying, "Queue_isCurrentlyPlaying");
    lib.bindSymbol(cast(void**)&Queue_setParamsFromAudioSource, "Queue_setParamsFromAudioSource");
    lib.bindSymbol(cast(void**)&Queue_setParamsEx, "Queue_setParamsEx");
    lib.bindSymbol(cast(void**)&Queue_setVolume, "Queue_setVolume");
    lib.bindSymbol(cast(void**)&Queue_setLooping, "Queue_setLooping");
    //lib.bindSymbol(cast(void**)&Queue_setAutoStop, "Queue_setAutoStop");
    lib.bindSymbol(cast(void**)&Queue_set3dMinMaxDistance, "Queue_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Queue_set3dAttenuation, "Queue_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Queue_set3dDopplerFactor, "Queue_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Queue_set3dListenerRelative, "Queue_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Queue_set3dDistanceDelay, "Queue_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Queue_set3dColliderEx, "Queue_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Queue_set3dAttenuator, "Queue_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Queue_setInaudibleBehavior, "Queue_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Queue_setLoopPoint, "Queue_setLoopPoint");
    lib.bindSymbol(cast(void**)&Queue_getLoopPoint, "Queue_getLoopPoint");
    lib.bindSymbol(cast(void**)&Queue_setFilter, "Queue_setFilter");
    lib.bindSymbol(cast(void**)&Queue_stop, "Queue_stop");
    lib.bindSymbol(cast(void**)&RobotizeFilter_create, "RobotizeFilter_create");
    lib.bindSymbol(cast(void**)&RobotizeFilter_destroy, "RobotizeFilter_destroy");
    lib.bindSymbol(cast(void**)&RobotizeFilter_getParamCount, "RobotizeFilter_getParamCount");
    lib.bindSymbol(cast(void**)&RobotizeFilter_getParamName, "RobotizeFilter_getParamName");
    lib.bindSymbol(cast(void**)&RobotizeFilter_getParamType, "RobotizeFilter_getParamType");
    lib.bindSymbol(cast(void**)&RobotizeFilter_getParamMax, "RobotizeFilter_getParamMax");
    lib.bindSymbol(cast(void**)&RobotizeFilter_getParamMin, "RobotizeFilter_getParamMin");
    lib.bindSymbol(cast(void**)&RobotizeFilter_setParams, "RobotizeFilter_setParams");
    lib.bindSymbol(cast(void**)&Sfxr_create, "Sfxr_create");
    lib.bindSymbol(cast(void**)&Sfxr_destroy, "Sfxr_destroy");
    lib.bindSymbol(cast(void**)&Sfxr_resetParams, "Sfxr_resetParams");
    lib.bindSymbol(cast(void**)&Sfxr_loadParams, "Sfxr_loadParams");
    lib.bindSymbol(cast(void**)&Sfxr_loadParamsMemEx, "Sfxr_loadParamsMemEx");
    lib.bindSymbol(cast(void**)&Sfxr_loadParamsFile, "Sfxr_loadParamsFile");
    lib.bindSymbol(cast(void**)&Sfxr_loadPreset, "Sfxr_loadPreset");
    lib.bindSymbol(cast(void**)&Sfxr_setVolume, "Sfxr_setVolume");
    lib.bindSymbol(cast(void**)&Sfxr_setLooping, "Sfxr_setLooping");
    //lib.bindSymbol(cast(void**)&Sfxr_setAutoStop, "Sfxr_setAutoStop");
    lib.bindSymbol(cast(void**)&Sfxr_set3dMinMaxDistance, "Sfxr_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Sfxr_set3dAttenuation, "Sfxr_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Sfxr_set3dDopplerFactor, "Sfxr_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Sfxr_set3dListenerRelative, "Sfxr_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Sfxr_set3dDistanceDelay, "Sfxr_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Sfxr_set3dColliderEx, "Sfxr_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Sfxr_set3dAttenuator, "Sfxr_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Sfxr_setInaudibleBehavior, "Sfxr_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Sfxr_setLoopPoint, "Sfxr_setLoopPoint");
    lib.bindSymbol(cast(void**)&Sfxr_getLoopPoint, "Sfxr_getLoopPoint");
    lib.bindSymbol(cast(void**)&Sfxr_setFilter, "Sfxr_setFilter");
    lib.bindSymbol(cast(void**)&Sfxr_stop, "Sfxr_stop");
    lib.bindSymbol(cast(void**)&Speech_create, "Speech_create");
    lib.bindSymbol(cast(void**)&Speech_destroy, "Speech_destroy");
    lib.bindSymbol(cast(void**)&Speech_setText, "Speech_setText");
    lib.bindSymbol(cast(void**)&Speech_setParamsEx, "Speech_setParamsEx");
    lib.bindSymbol(cast(void**)&Speech_setVolume, "Speech_setVolume");
    lib.bindSymbol(cast(void**)&Speech_setLooping, "Speech_setLooping");
    //lib.bindSymbol(cast(void**)&Speech_setAutoStop, "Speech_setAutoStop");
    lib.bindSymbol(cast(void**)&Speech_set3dMinMaxDistance, "Speech_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Speech_set3dAttenuation, "Speech_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Speech_set3dDopplerFactor, "Speech_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Speech_set3dListenerRelative, "Speech_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Speech_set3dDistanceDelay, "Speech_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Speech_set3dColliderEx, "Speech_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Speech_set3dAttenuator, "Speech_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Speech_setInaudibleBehavior, "Speech_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Speech_setLoopPoint, "Speech_setLoopPoint");
    lib.bindSymbol(cast(void**)&Speech_getLoopPoint, "Speech_getLoopPoint");
    lib.bindSymbol(cast(void**)&Speech_setFilter, "Speech_setFilter");
    lib.bindSymbol(cast(void**)&Speech_stop, "Speech_stop");
    lib.bindSymbol(cast(void**)&TedSid_create, "TedSid_create");
    lib.bindSymbol(cast(void**)&TedSid_destroy, "TedSid_destroy");
    lib.bindSymbol(cast(void**)&TedSid_load, "TedSid_load");
    lib.bindSymbol(cast(void**)&TedSid_loadMemEx, "TedSid_loadMemEx");
    lib.bindSymbol(cast(void**)&TedSid_loadFile, "TedSid_loadFile");
    lib.bindSymbol(cast(void**)&TedSid_setVolume, "TedSid_setVolume");
    lib.bindSymbol(cast(void**)&TedSid_setLooping, "TedSid_setLooping");
    //lib.bindSymbol(cast(void**)&TedSid_setAutoStop, "TedSid_setAutoStop");
    lib.bindSymbol(cast(void**)&TedSid_set3dMinMaxDistance, "TedSid_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&TedSid_set3dAttenuation, "TedSid_set3dAttenuation");
    lib.bindSymbol(cast(void**)&TedSid_set3dDopplerFactor, "TedSid_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&TedSid_set3dListenerRelative, "TedSid_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&TedSid_set3dDistanceDelay, "TedSid_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&TedSid_set3dColliderEx, "TedSid_set3dColliderEx");
    lib.bindSymbol(cast(void**)&TedSid_set3dAttenuator, "TedSid_set3dAttenuator");
    lib.bindSymbol(cast(void**)&TedSid_setInaudibleBehavior, "TedSid_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&TedSid_setLoopPoint, "TedSid_setLoopPoint");
    lib.bindSymbol(cast(void**)&TedSid_getLoopPoint, "TedSid_getLoopPoint");
    lib.bindSymbol(cast(void**)&TedSid_setFilter, "TedSid_setFilter");
    lib.bindSymbol(cast(void**)&TedSid_stop, "TedSid_stop");
    lib.bindSymbol(cast(void**)&Vic_create, "Vic_create");
    lib.bindSymbol(cast(void**)&Vic_destroy, "Vic_destroy");
    lib.bindSymbol(cast(void**)&Vic_setModel, "Vic_setModel");
    lib.bindSymbol(cast(void**)&Vic_getModel, "Vic_getModel");
    lib.bindSymbol(cast(void**)&Vic_setRegister, "Vic_setRegister");
    lib.bindSymbol(cast(void**)&Vic_getRegister, "Vic_getRegister");
    lib.bindSymbol(cast(void**)&Vic_setVolume, "Vic_setVolume");
    lib.bindSymbol(cast(void**)&Vic_setLooping, "Vic_setLooping");
    //lib.bindSymbol(cast(void**)&Vic_setAutoStop, "Vic_setAutoStop");
    lib.bindSymbol(cast(void**)&Vic_set3dMinMaxDistance, "Vic_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Vic_set3dAttenuation, "Vic_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Vic_set3dDopplerFactor, "Vic_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Vic_set3dListenerRelative, "Vic_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Vic_set3dDistanceDelay, "Vic_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Vic_set3dColliderEx, "Vic_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Vic_set3dAttenuator, "Vic_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Vic_setInaudibleBehavior, "Vic_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Vic_setLoopPoint, "Vic_setLoopPoint");
    lib.bindSymbol(cast(void**)&Vic_getLoopPoint, "Vic_getLoopPoint");
    lib.bindSymbol(cast(void**)&Vic_setFilter, "Vic_setFilter");
    lib.bindSymbol(cast(void**)&Vic_stop, "Vic_stop");
    lib.bindSymbol(cast(void**)&Vizsn_create, "Vizsn_create");
    lib.bindSymbol(cast(void**)&Vizsn_destroy, "Vizsn_destroy");
    lib.bindSymbol(cast(void**)&Vizsn_setText, "Vizsn_setText");
    lib.bindSymbol(cast(void**)&Vizsn_setVolume, "Vizsn_setVolume");
    lib.bindSymbol(cast(void**)&Vizsn_setLooping, "Vizsn_setLooping");
    //lib.bindSymbol(cast(void**)&Vizsn_setAutoStop, "Vizsn_setAutoStop");
    lib.bindSymbol(cast(void**)&Vizsn_set3dMinMaxDistance, "Vizsn_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Vizsn_set3dAttenuation, "Vizsn_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Vizsn_set3dDopplerFactor, "Vizsn_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Vizsn_set3dListenerRelative, "Vizsn_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Vizsn_set3dDistanceDelay, "Vizsn_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Vizsn_set3dColliderEx, "Vizsn_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Vizsn_set3dAttenuator, "Vizsn_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Vizsn_setInaudibleBehavior, "Vizsn_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Vizsn_setLoopPoint, "Vizsn_setLoopPoint");
    lib.bindSymbol(cast(void**)&Vizsn_getLoopPoint, "Vizsn_getLoopPoint");
    lib.bindSymbol(cast(void**)&Vizsn_setFilter, "Vizsn_setFilter");
    lib.bindSymbol(cast(void**)&Vizsn_stop, "Vizsn_stop");
    lib.bindSymbol(cast(void**)&Wav_create, "Wav_create");
    lib.bindSymbol(cast(void**)&Wav_destroy, "Wav_destroy");
    lib.bindSymbol(cast(void**)&Wav_load, "Wav_load");
    lib.bindSymbol(cast(void**)&Wav_loadMemEx, "Wav_loadMemEx");
    lib.bindSymbol(cast(void**)&Wav_loadFile, "Wav_loadFile");
    lib.bindSymbol(cast(void**)&Wav_loadRawWave8Ex, "Wav_loadRawWave8Ex");
    lib.bindSymbol(cast(void**)&Wav_loadRawWave16Ex, "Wav_loadRawWave16Ex");
    lib.bindSymbol(cast(void**)&Wav_loadRawWaveEx, "Wav_loadRawWaveEx");
    lib.bindSymbol(cast(void**)&Wav_getLength, "Wav_getLength");
    lib.bindSymbol(cast(void**)&Wav_setVolume, "Wav_setVolume");
    lib.bindSymbol(cast(void**)&Wav_setLooping, "Wav_setLooping");
    //lib.bindSymbol(cast(void**)&Wav_setAutoStop, "Wav_setAutoStop");
    lib.bindSymbol(cast(void**)&Wav_set3dMinMaxDistance, "Wav_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&Wav_set3dAttenuation, "Wav_set3dAttenuation");
    lib.bindSymbol(cast(void**)&Wav_set3dDopplerFactor, "Wav_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&Wav_set3dListenerRelative, "Wav_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&Wav_set3dDistanceDelay, "Wav_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&Wav_set3dColliderEx, "Wav_set3dColliderEx");
    lib.bindSymbol(cast(void**)&Wav_set3dAttenuator, "Wav_set3dAttenuator");
    lib.bindSymbol(cast(void**)&Wav_setInaudibleBehavior, "Wav_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&Wav_setLoopPoint, "Wav_setLoopPoint");
    lib.bindSymbol(cast(void**)&Wav_getLoopPoint, "Wav_getLoopPoint");
    lib.bindSymbol(cast(void**)&Wav_setFilter, "Wav_setFilter");
    lib.bindSymbol(cast(void**)&Wav_stop, "Wav_stop");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_create, "WaveShaperFilter_create");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_destroy, "WaveShaperFilter_destroy");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_setParams, "WaveShaperFilter_setParams");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_getParamCount, "WaveShaperFilter_getParamCount");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_getParamName, "WaveShaperFilter_getParamName");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_getParamType, "WaveShaperFilter_getParamType");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_getParamMax, "WaveShaperFilter_getParamMax");
    lib.bindSymbol(cast(void**)&WaveShaperFilter_getParamMin, "WaveShaperFilter_getParamMin");
    lib.bindSymbol(cast(void**)&WavStream_create, "WavStream_create");
    lib.bindSymbol(cast(void**)&WavStream_destroy, "WavStream_destroy");
    lib.bindSymbol(cast(void**)&WavStream_load, "WavStream_load");
    lib.bindSymbol(cast(void**)&WavStream_loadMemEx, "WavStream_loadMemEx");
    lib.bindSymbol(cast(void**)&WavStream_loadToMem, "WavStream_loadToMem");
    lib.bindSymbol(cast(void**)&WavStream_loadFile, "WavStream_loadFile");
    lib.bindSymbol(cast(void**)&WavStream_loadFileToMem, "WavStream_loadFileToMem");
    lib.bindSymbol(cast(void**)&WavStream_getLength, "WavStream_getLength");
    lib.bindSymbol(cast(void**)&WavStream_setVolume, "WavStream_setVolume");
    lib.bindSymbol(cast(void**)&WavStream_setLooping, "WavStream_setLooping");
    //lib.bindSymbol(cast(void**)&WavStream_setAutoStop, "WavStream_setAutoStop");
    lib.bindSymbol(cast(void**)&WavStream_set3dMinMaxDistance, "WavStream_set3dMinMaxDistance");
    lib.bindSymbol(cast(void**)&WavStream_set3dAttenuation, "WavStream_set3dAttenuation");
    lib.bindSymbol(cast(void**)&WavStream_set3dDopplerFactor, "WavStream_set3dDopplerFactor");
    lib.bindSymbol(cast(void**)&WavStream_set3dListenerRelative, "WavStream_set3dListenerRelative");
    lib.bindSymbol(cast(void**)&WavStream_set3dDistanceDelay, "WavStream_set3dDistanceDelay");
    lib.bindSymbol(cast(void**)&WavStream_set3dColliderEx, "WavStream_set3dColliderEx");
    lib.bindSymbol(cast(void**)&WavStream_set3dAttenuator, "WavStream_set3dAttenuator");
    lib.bindSymbol(cast(void**)&WavStream_setInaudibleBehavior, "WavStream_setInaudibleBehavior");
    lib.bindSymbol(cast(void**)&WavStream_setLoopPoint, "WavStream_setLoopPoint");
    lib.bindSymbol(cast(void**)&WavStream_getLoopPoint, "WavStream_getLoopPoint");
    lib.bindSymbol(cast(void**)&WavStream_setFilter, "WavStream_setFilter");
    lib.bindSymbol(cast(void**)&WavStream_stop, "WavStream_stop");

    
    loadedVersion = SLSupport.sl20200207;

    if (errorCount() != errCount)
        return SLSupport.badLibrary;

    return loadedVersion;
}
